using System;
using System.Collections;
using System.Collections.Generic;
using Unity.VisualScripting;
using UnityEngine;
using UnityEngine.InputSystem;

public class PlayerMovement : MonoBehaviour
{
    public float characterXVelocity;
    public float characterYVelocity;

    public float velocity = 1f;
    public float jumpVelocity = 1f;
    Vector2 moveInput;
    Rigidbody2D myRigidBody;
    Animator animator;
    SpriteRenderer spriteRenderer;
    float jumpValue;
    void Start()
    {
        myRigidBody = GetComponent<Rigidbody2D>();
        animator = GetComponent<Animator>();
        spriteRenderer = GetComponent<SpriteRenderer>();
    }

    void Update()
    {
        characterXVelocity = myRigidBody.velocity.x;
        characterYVelocity = myRigidBody.velocity.y;

        //Tells the sprite renderer to flit the character sprite over the Y axis so it "appears to be looking" into the direction its moving.
        if (moveInput.x < 0)
            spriteRenderer.flipX = true;

        if (moveInput.x > 0)
            spriteRenderer.flipX = false;

        if (jumpValue > 0f)
            animator.SetBool("isJumping", true);
        else
            animator.SetBool("isJumping", false);

        //Generates a new Vector2 variable, combining the input from the gamepad or keyboard but only on the X axis.
        Vector2 playerVelocity = new Vector2(moveInput.x, jumpValue is 0 ? myRigidBody.velocity.y : myRigidBody.velocity.y + jumpVelocity);

        //Applies the new Vector2 variable to the rigidBody of the character, making it move.
        myRigidBody.velocity = playerVelocity * velocity;


        //Handles the triggering of the running animation according the x velocity.
        if (myRigidBody.velocity.x != 0f)
            animator.SetBool("isRunning", true);
        else
            animator.SetBool("isRunning", false);

        jumpValue = 0f;
    }
    //Event set up on Unity to be called whenever the user generates input valid to the binded previously configured.
    void OnMove(InputValue value)
    {
        //Sets the internal variable to be the same and of the same type as the input generated by the used.
        moveInput = value.Get<Vector2>();

        //Writes the input information to the console.
        Debug.Log(moveInput);
    }
    void OnJump(InputValue value)
    {
        jumpValue = value.Get<float>();
        Debug.Log(jumpValue);
    }
}
